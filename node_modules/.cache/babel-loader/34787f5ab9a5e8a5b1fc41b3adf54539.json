{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ExcelColumn = require(\"./ExcelColumn\");\n\nvar _ExcelColumn2 = _interopRequireDefault(_ExcelColumn);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ExcelSheet = function (_React$Component) {\n  _inherits(ExcelSheet, _React$Component);\n\n  function ExcelSheet() {\n    _classCallCheck(this, ExcelSheet);\n\n    return _possibleConstructorReturn(this, (ExcelSheet.__proto__ || Object.getPrototypeOf(ExcelSheet)).apply(this, arguments));\n  }\n\n  _createClass(ExcelSheet, [{\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return ExcelSheet;\n}(_react2.default.Component);\n\nExcelSheet.propsTypes = {\n  name: _propTypes2.default.string.isRequired,\n  data: _propTypes2.default.arrayOf(_propTypes2.default.object),\n  dataSet: _propTypes2.default.arrayOf(_propTypes2.default.object),\n  value: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.func]).isRequired,\n  children: _propTypes2.default.arrayOf(function (propValue, key) {\n    var type = propValue[key];\n\n    if (type !== _ExcelColumn2.default) {\n      throw new Error(\"<ExcelSheet> can only have <ExcelColumn> as children\");\n    }\n  }).isRequired\n};\nexports.default = ExcelSheet;","map":null,"metadata":{},"sourceType":"script"}