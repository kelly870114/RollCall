{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\src\\\\components\\\\Course\\\\CourseDialog.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { withStyles } from '@material-ui/core/styles';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { fetchPostCourse } from '../../api';\nimport Airtable from 'airtable';\nvar base = new Airtable({\n  apiKey: 'keyA7EKdngjou4Dgy'\n}).base('appcXtOTPnE4QWIIt');\nvar tableTeacher = base('Teacher');\nvar tableClassRoom = base('ClassRoom');\nvar tableClassDay = base('ClassDay');\n\nfunction sleep(time) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, time);\n  });\n}\n\nvar counter = 0;\n\nfunction createData(classroom, area, table) {\n  counter += 1;\n  return {\n    id: classroom,\n    area: area,\n    table: table\n  };\n}\n\nfunction createTeacherData(id, name) {\n  return {\n    id: id,\n    name: name\n  };\n}\n\nfunction createDayData(classroom, day, time) {\n  counter += 1;\n  return {\n    id: classroom,\n    day: day,\n    time: time\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '800px',\n      margin: 'auto'\n    },\n    formControl: {\n      minWidth: 120,\n      width: 220,\n      marginTop: theme.spacing.unit * 3\n    },\n    container: {\n      width: '400px',\n      paddingLeft: '22%'\n    },\n    textField: {\n      width: 220,\n      marginTop: theme.spacing.unit * 3\n    },\n    add: {\n      marginTop: theme.spacing.unit * 3,\n      marginLeft: theme.spacing.unit * 150,\n      borderRadius: '10px'\n    }\n  };\n};\n\nvar FormDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormDialog, _React$Component);\n\n  function FormDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      course: '',\n      teacher: '',\n      teacherValue: [],\n      classroom: '',\n      classroomInit: [],\n      classroomValue: [],\n      day: '',\n      dayValue: [\"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\", \"星期日\"],\n      dayInit: [],\n      time: '',\n      timeValue: [\"9:00\", \"13:00\", \"19:00\"],\n      labelWidth: 0,\n      open: false,\n      listNameFromParent: ''\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value)); //after change classroom\n\n\n        var dayValueTemp = [\"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\", \"星期日\"];\n\n        for (var index = 0; index < _this.state.dayInit.length; index++) {\n          if (event.target.value === _this.state.dayInit[index].id) {\n            for (var j = 0; j < 5; j++) {\n              if (_this.state.dayValue[j] === _this.state.dayInit[index].day) {\n                delete dayValueTemp[j];\n              }\n            }\n          }\n        }\n\n        _this.setState({\n          dayValue: dayValueTemp\n        });\n      };\n    };\n\n    _this.handleDayChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n\n        if (event.target.value == \"星期六\" || event.target.value == \"星期日\") {\n          _this.setState({\n            timeValue: [\"9:00\", \"13:00\", \"19:00\"]\n          });\n        } else {\n          _this.setState({\n            timeValue: [\"19:00\"]\n          });\n        }\n      };\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var data = {\n        fields: {\n          class_id: {},\n          class_day: {},\n          class_start_time: {},\n          classroom_id: {},\n          classroom_id_link: {},\n          teacher_id: {}\n        }\n      };\n      data.fields.class_id = _this.state.course;\n      data.fields.class_day = _this.state.day;\n      data.fields.class_start_time = _this.state.time;\n      data.fields.classroom_id = _this.state.classroom;\n\n      for (var index = 0; index < _this.state.classroomValue.length; index++) {\n        if (_this.state.classroom == _this.state.classroomValue[index].id) {\n          data.fields.classroom_id_link = [_this.state.classroomValue[index].table];\n        }\n      }\n\n      for (var index = 0; index < _this.state.teacherValue.length; index++) {\n        if (_this.state.teacher == _this.state.teacherValue[index].name) {\n          data.fields.teacher_id = [_this.state.teacherValue[index].id];\n        }\n      }\n\n      fetchPostCourse(data);\n\n      _this.setState({\n        open: false\n      });\n\n      sleep(500).then(function () {\n        window.location.reload();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FormDialog, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.listNameFromParent !== this.state.listNameFromParent) {\n        var count = this.state.classroomInit.length;\n        var temp = [];\n\n        for (var index = 0; index < count; index++) {\n          if (nextProps.listNameFromParent === this.state.classroomInit[index].area) {\n            temp.push(this.state.classroomInit[index]);\n            this.setState({\n              classroomValue: temp\n            });\n          }\n        }\n\n        this.setState({\n          listNameFromParent: nextProps.listNameFromParent\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //Teacher\n      tableTeacher.select({\n        view: \"Grid view\"\n      }).eachPage(function (records, fetchNextPage) {\n        _this2.setState({\n          records: records\n        });\n\n        console.log(records);\n        var temp = [];\n\n        var teacher_name = _this2.state.records.map(function (record, index) {\n          return record.fields['teacher_name'];\n        });\n\n        var teacher_tableId = _this2.state.records.map(function (record, index) {\n          return record.id['id'];\n        });\n\n        for (var index = 0; index < teacher_name.length; index++) {\n          temp.push(createTeacherData(teacher_tableId[index], teacher_name[index]));\n        }\n\n        _this2.setState({\n          teacherValue: temp\n        });\n\n        fetchNextPage();\n      }); //ClassRoom\n\n      tableClassRoom.select({\n        view: \"Grid view\"\n      }).eachPage(function (records, fetchNextPage) {\n        _this2.setState({\n          records: records\n        });\n\n        var temp = [];\n\n        var classroom_id = _this2.state.records.map(function (record, index) {\n          return record.fields['classroom_id'];\n        });\n\n        var class_area = _this2.state.records.map(function (record, index) {\n          return record.fields['class_area'];\n        });\n\n        var classroom_tableId = _this2.state.records.map(function (record, index) {\n          return record.id['id'];\n        });\n\n        for (var index = 0; index < classroom_id.length; index++) {\n          temp.push(createData(classroom_id[index], class_area[index], classroom_tableId[index]));\n        }\n\n        _this2.setState({\n          classroomInit: temp\n        });\n\n        _this2.setState({\n          classroomValue: temp\n        });\n\n        fetchNextPage();\n      }); //classDay\n\n      tableClassDay.select({\n        view: \"Grid view\"\n      }).eachPage(function (records, fetchNextPage) {\n        _this2.setState({\n          records: records\n        });\n\n        var temp = [];\n\n        var classroom_id = _this2.state.records.map(function (record, index) {\n          return record.fields['classroom_id'];\n        });\n\n        var class_day = _this2.state.records.map(function (record, index) {\n          return record.fields['class_day'];\n        });\n\n        var class_start_time = _this2.state.records.map(function (record, index) {\n          return record.fields['class_start_time'];\n        });\n\n        for (var index = 0; index < classroom_id.length; index++) {\n          temp.push(createDayData(classroom_id[index], class_day[index], class_start_time[index]));\n        }\n\n        _this2.setState({\n          dayInit: temp\n        });\n\n        fetchNextPage();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.add,\n        variant: \"outlined\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u8AB2\\u7A0B\"), React.createElement(Dialog, {\n        className: classes.root,\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u8AB2\\u7A0B\\u8CC7\\u6599\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-course\",\n        label: \"\\u8AB2\\u7A0B\\u540D\\u7A31\",\n        className: classes.textField,\n        value: this.state.course,\n        onChange: this.handleChange('course'),\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref) {\n          _this3.InputLabelRef = _ref;\n        },\n        htmlFor: \"outlined-teacher-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"\\u6388\\u8AB2\\u8001\\u5E2B\"), React.createElement(Select, {\n        value: this.state.teacher,\n        onChange: this.handleChange('teacher'),\n        input: React.createElement(OutlinedInput, {\n          labelWidth: this.state.labelWidth,\n          name: \"teacher\",\n          id: \"outlined-teacher-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"\\u9078\\u64C7\\u8001\\u5E2B\")), this.state.teacherValue.map(function (n, index) {\n        return React.createElement(MenuItem, {\n          key: n.id,\n          value: n.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, n.name);\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref2) {\n          _this3.InputLabelRef = _ref2;\n        },\n        htmlFor: \"outlined-classroom-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"\\u6559\\u5BA4\"), React.createElement(Select, {\n        value: this.state.classroom,\n        onChange: this.handleChange('classroom'),\n        input: React.createElement(OutlinedInput, {\n          labelWidth: this.state.labelWidth,\n          name: \"classroom\",\n          id: \"outlined-classroom-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"\\u9078\\u64C7\\u6559\\u5BA4\")), this.state.classroomValue.map(function (n, index) {\n        return React.createElement(MenuItem, {\n          key: n.table,\n          value: n.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, n.id);\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref3) {\n          _this3.InputLabelRef = _ref3;\n        },\n        htmlFor: \"outlined-day-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"\\u661F\\u671F\"), React.createElement(Select, {\n        value: this.state.day,\n        onChange: this.handleDayChange('day'),\n        input: React.createElement(OutlinedInput, {\n          labelWidth: this.state.labelWidth,\n          name: \"day\",\n          id: \"outlined-day-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), this.state.dayValue.map(function (n, index) {\n        return React.createElement(MenuItem, {\n          value: n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, n);\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref4) {\n          _this3.InputLabelRef = _ref4;\n        },\n        htmlFor: \"outlined-day-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"\\u6642\\u9593\"), React.createElement(Select, {\n        value: this.state.time,\n        onChange: this.handleChange('time'),\n        input: React.createElement(OutlinedInput, {\n          labelWidth: this.state.labelWidth,\n          name: \"time\",\n          id: \"outlined-day-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), this.state.timeValue.map(function (n, index) {\n        return React.createElement(MenuItem, {\n          value: n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, n);\n      })))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"\\u53D6\\u6D88\"), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u8AB2\\u7A0B\"))));\n    }\n  }]);\n\n  return FormDialog;\n}(React.Component);\n\nexport default withStyles(styles)(FormDialog);","map":{"version":3,"sources":["C:\\Users\\耍廢社\\Desktop\\MyProject\\src\\components\\Course\\CourseDialog.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","withStyles","OutlinedInput","InputLabel","MenuItem","FormControl","Select","fetchPostCourse","Airtable","base","apiKey","tableTeacher","tableClassRoom","tableClassDay","sleep","time","Promise","resolve","setTimeout","counter","createData","classroom","area","table","id","createTeacherData","name","createDayData","day","styles","theme","root","width","margin","formControl","minWidth","marginTop","spacing","unit","container","paddingLeft","textField","add","marginLeft","borderRadius","FormDialog","state","course","teacher","teacherValue","classroomInit","classroomValue","dayValue","dayInit","timeValue","labelWidth","open","listNameFromParent","handleChange","event","setState","target","value","dayValueTemp","index","length","j","handleDayChange","handleClickOpen","handleClose","handleSubmit","data","fields","class_id","class_day","class_start_time","classroom_id","classroom_id_link","teacher_id","then","window","location","reload","nextProps","count","temp","push","select","view","eachPage","records","fetchNextPage","console","log","teacher_name","map","record","teacher_tableId","class_area","classroom_tableId","classes","props","ref","InputLabelRef","n","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { fetchPostCourse } from '../../api';\r\nimport Airtable from 'airtable';\r\n\r\nconst base = new Airtable({ apiKey: 'keyA7EKdngjou4Dgy' }).base('appcXtOTPnE4QWIIt');\r\nconst tableTeacher = base('Teacher');\r\nconst tableClassRoom = base('ClassRoom');\r\nconst tableClassDay = base('ClassDay');\r\n\r\nfunction sleep (time) {\r\n    return new Promise((resolve) => setTimeout(resolve, time));\r\n}\r\n\r\nlet counter = 0;\r\nfunction createData(classroom, area, table) {\r\n    counter += 1;\r\n    return { id: classroom, area, table };\r\n}\r\n\r\nfunction createTeacherData(id, name) {\r\n    return { id: id, name };\r\n}\r\n\r\nfunction createDayData(classroom, day, time) {\r\n    counter += 1;\r\n    return { id: classroom, day, time };\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        margin: 'auto',\r\n    },\r\n    formControl: {\r\n        minWidth: 120,\r\n        width: 220,\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    container: {\r\n        width: '400px',\r\n        paddingLeft: '22%',\r\n    },\r\n    textField: {\r\n        width: 220,\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    add: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit * 150,\r\n        borderRadius: '10px',\r\n    },\r\n});\r\n\r\nclass FormDialog extends React.Component {\r\n    state = {\r\n        course: '',\r\n        teacher: '',\r\n        teacherValue: [],\r\n        classroom: '',\r\n        classroomInit: [],\r\n        classroomValue: [],\r\n        day: '',\r\n        dayValue: [\"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\", \"星期日\"],\r\n        dayInit: [],\r\n        time: '',\r\n        timeValue: [\"9:00\", \"13:00\", \"19:00\"],\r\n        labelWidth: 0,\r\n        open: false,\r\n        listNameFromParent: '',\r\n    };\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.listNameFromParent !== this.state.listNameFromParent) {\r\n            var count = this.state.classroomInit.length;\r\n            var temp = [];\r\n            for (var index = 0; index < count; index++) {\r\n                if (nextProps.listNameFromParent === this.state.classroomInit[index].area) {\r\n                    temp.push(this.state.classroomInit[index]);\r\n                    this.setState({ classroomValue: temp });\r\n                }\r\n            }\r\n            this.setState({ listNameFromParent: nextProps.listNameFromParent });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Teacher\r\n        tableTeacher.select({\r\n            view: \"Grid view\",\r\n        }).eachPage((records, fetchNextPage) => {\r\n            this.setState({ records });\r\n            console.log(records);\r\n            var temp = [];\r\n            const teacher_name = this.state.records.map((record, index) => record.fields['teacher_name']);\r\n            const teacher_tableId = this.state.records.map((record, index) => record.id['id']);\r\n            for (var index = 0; index < teacher_name.length; index++) {\r\n                temp.push(createTeacherData(teacher_tableId[index], teacher_name[index]));\r\n            }\r\n\r\n            this.setState({ teacherValue: temp });\r\n            fetchNextPage();\r\n        }\r\n        );\r\n\r\n        //ClassRoom\r\n        tableClassRoom.select({\r\n            view: \"Grid view\",\r\n        }).eachPage((records, fetchNextPage) => {\r\n            this.setState({ records });\r\n            var temp = [];\r\n            const classroom_id = this.state.records.map((record, index) => record.fields['classroom_id']);\r\n            const class_area = this.state.records.map((record, index) => record.fields['class_area']);\r\n            const classroom_tableId = this.state.records.map((record, index) => record.id['id']);\r\n            for (var index = 0; index < classroom_id.length; index++) {\r\n                temp.push(createData(classroom_id[index], class_area[index], classroom_tableId[index]));\r\n            }\r\n            this.setState({ classroomInit: temp });\r\n            this.setState({ classroomValue: temp });\r\n            fetchNextPage();\r\n        }\r\n        );\r\n        //classDay\r\n        tableClassDay.select({\r\n            view: \"Grid view\",\r\n        }).eachPage((records, fetchNextPage) => {\r\n            this.setState({ records });\r\n            var temp = [];\r\n            const classroom_id = this.state.records.map((record, index) => record.fields['classroom_id']);\r\n            const class_day = this.state.records.map((record, index) => record.fields['class_day']);\r\n            const class_start_time = this.state.records.map((record, index) => record.fields['class_start_time']);\r\n            for (var index = 0; index < classroom_id.length; index++) {\r\n                temp.push(createDayData(classroom_id[index], class_day[index], class_start_time[index]));\r\n            }\r\n            this.setState({ dayInit: temp });\r\n            fetchNextPage();\r\n        }\r\n        );\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n\r\n        //after change classroom\r\n        var dayValueTemp = [\"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\", \"星期日\"];\r\n        for (var index = 0; index < this.state.dayInit.length; index++) {\r\n            if (event.target.value === this.state.dayInit[index].id) {\r\n                for (var j = 0; j < 5; j++) {\r\n                    if (this.state.dayValue[j] === this.state.dayInit[index].day) {\r\n                        delete dayValueTemp[j];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setState({ dayValue: dayValueTemp });\r\n    };\r\n    //change time value(after choose day)\r\n    handleDayChange = name => event => {\r\n        this.setState({ [name]: event.target.value });\r\n        if(event.target.value == \"星期六\" || event.target.value == \"星期日\"){\r\n            this.setState({timeValue : [\"9:00\",\"13:00\",\"19:00\"]});\r\n        }else{\r\n            this.setState({timeValue : [\"19:00\"]});\r\n        }\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n    handleSubmit = () => {\r\n        let data = { fields: { class_id:{}, class_day: {}, class_start_time: {}, classroom_id: {}, classroom_id_link:{}, teacher_id:{} } };\r\n\r\n        data.fields.class_id = this.state.course;\r\n        data.fields.class_day = this.state.day;\r\n        data.fields.class_start_time = this.state.time;\r\n        data.fields.classroom_id = this.state.classroom;\r\n\r\n        for (var index = 0; index < this.state.classroomValue.length; index++) {\r\n            if(this.state.classroom == this.state.classroomValue[index].id){\r\n                data.fields.classroom_id_link = [this.state.classroomValue[index].table];\r\n            }\r\n        }\r\n\r\n        for (var index = 0; index < this.state.teacherValue.length; index++) {\r\n            if(this.state.teacher == this.state.teacherValue[index].name){\r\n                data.fields.teacher_id = [this.state.teacherValue[index].id];\r\n            }\r\n        }\r\n        fetchPostCourse(data);\r\n        this.setState({ open: false });\r\n\r\n        sleep(500).then(() => {\r\n            window.location.reload();\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Button className={classes.add} variant=\"outlined\" onClick={this.handleClickOpen}>\r\n                    新增課程\r\n                </Button>\r\n                <Dialog className={classes.root}\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">新增課程資料</DialogTitle>\r\n                    <DialogContent>\r\n                        <form className={classes.container} noValidate autoComplete=\"off\">\r\n                            <div>\r\n                                <TextField\r\n                                    id=\"outlined-course\"\r\n                                    label=\"課程名稱\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.course}\r\n                                    onChange={this.handleChange('course')}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel\r\n                                        ref={ref => {\r\n                                            this.InputLabelRef = ref;\r\n                                        }}\r\n                                        htmlFor=\"outlined-teacher-simple\"\r\n                                    >\r\n                                        授課老師\r\n                                </InputLabel>\r\n                                    <Select\r\n                                        value={this.state.teacher}\r\n                                        onChange={this.handleChange('teacher')}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                                labelWidth={this.state.labelWidth}\r\n                                                name=\"teacher\"\r\n                                                id=\"outlined-teacher-simple\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                            <em>選擇老師</em>\r\n                                        </MenuItem>\r\n                                        {(this.state.teacherValue).map((n, index) => {\r\n                                            return (\r\n                                                <MenuItem key={n.id} value={n.name}>{n.name}</MenuItem>\r\n                                            );\r\n                                        })}\r\n                                        {/* <MenuItem value={10}>蔡萌志</MenuItem>\r\n                                        <MenuItem value={20}>胡俊之</MenuItem>\r\n                                        <MenuItem value={30}>陳子立</MenuItem> */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel\r\n                                        ref={ref => {\r\n                                            this.InputLabelRef = ref;\r\n                                        }}\r\n                                        htmlFor=\"outlined-classroom-simple\"\r\n                                    >\r\n                                        教室\r\n                                </InputLabel>\r\n                                    <Select\r\n                                        value={this.state.classroom}\r\n                                        onChange={this.handleChange('classroom')}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                                labelWidth={this.state.labelWidth}\r\n                                                name=\"classroom\"\r\n                                                id=\"outlined-classroom-simple\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                            <em>選擇教室</em>\r\n                                        </MenuItem>\r\n                                        {(this.state.classroomValue).map((n, index) => {\r\n                                            return (\r\n                                                <MenuItem key={n.table} value={n.id}>{n.id}</MenuItem>\r\n                                            );\r\n                                        })}\r\n                                        {/* <MenuItem value={10}>BS336</MenuItem>\r\n                                        <MenuItem value={20}>BS440</MenuItem>\r\n                                        <MenuItem value={30}>LM503</MenuItem> */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel\r\n                                        ref={ref => {\r\n                                            this.InputLabelRef = ref;\r\n                                        }}\r\n                                        htmlFor=\"outlined-day-simple\"\r\n                                    >\r\n                                        星期\r\n                                </InputLabel>\r\n                                    <Select\r\n                                        value={this.state.day}\r\n                                        onChange={this.handleDayChange('day')}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                                labelWidth={this.state.labelWidth}\r\n                                                name=\"day\"\r\n                                                id=\"outlined-day-simple\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                        </MenuItem>\r\n                                        {(this.state.dayValue).map((n, index) => {\r\n                                            return (\r\n                                                <MenuItem value={n}>{n}</MenuItem>\r\n                                            );\r\n                                        })}\r\n                                        {/* <MenuItem value={10}>星期一</MenuItem>\r\n                                        <MenuItem value={20}>星期二</MenuItem>\r\n                                        <MenuItem value={30}>星期三</MenuItem> */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel\r\n                                        ref={ref => {\r\n                                            this.InputLabelRef = ref;\r\n                                        }}\r\n                                        htmlFor=\"outlined-day-simple\"\r\n                                    >\r\n                                        時間\r\n                                </InputLabel>\r\n                                    <Select\r\n                                        value={this.state.time}\r\n                                        onChange={this.handleChange('time')}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                                labelWidth={this.state.labelWidth}\r\n                                                name=\"time\"\r\n                                                id=\"outlined-day-simple\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                        </MenuItem>\r\n                                        {(this.state.timeValue).map((n, index) => {\r\n                                            return (\r\n                                                <MenuItem value={n}>{n}</MenuItem>\r\n                                            );\r\n                                        })}\r\n                                        {/* <MenuItem value={10}>21:00</MenuItem>\r\n                                        <MenuItem value={20}>22:00</MenuItem>\r\n                                        <MenuItem value={30}>19:00</MenuItem> */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">取消</Button>\r\n                        <Button onClick={this.handleSubmit} color=\"primary\">新增課程</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(FormDialog);"]},"metadata":{},"sourceType":"module"}