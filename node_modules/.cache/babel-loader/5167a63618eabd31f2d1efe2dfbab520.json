{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\src\\\\components\\\\Apply\\\\UploadFile.js\";\nimport React, { PureComponent } from 'react';\n\nvar UploadFile =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(UploadFile, _PureComponent);\n\n  function UploadFile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadFile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadFile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      path: '',\n      preview: null,\n      data: null\n    };\n\n    _this.changeName = function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    _this.changePath = function (e) {\n      var file = e.target.files[0];\n\n      if (!file) {\n        return;\n      }\n\n      var src,\n          preview,\n          type = file.type; // 匹配类型为image/开头的字符串\n\n      src = URL.createObjectURL(file);\n      preview = React.createElement(\"img\", {\n        src: src,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n\n      _this.setState({\n        path: file.name,\n        data: file,\n        preview: preview\n      });\n    };\n\n    _this.upload = function () {\n      var data = _this.state.data;\n\n      if (!data) {\n        console.log('未选择文件');\n        return;\n      } //此处的url应该是服务端提供的上传文件api \n\n\n      var url = 'http://localhost:3000/api/upload';\n      var form = new FormData(); //此处的file字段由上传的api决定，可以是其它值\n\n      form.append('file', data);\n      fetch(url, {\n        method: 'POST',\n        body: form\n      }).then(function (res) {\n        console.log(res);\n      });\n    };\n\n    _this.cancel = function () {\n      _this.props.closeOverlay();\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadFile, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          path = _this$state.path,\n          preview = _this$state.preview;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, path ? path : '請選擇文件路徑'), React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"video/*,image/*,text/plain\",\n        onChange: this.changePath,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"media\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, preview));\n    }\n  }]);\n\n  return UploadFile;\n}(PureComponent);\n\nexport { UploadFile as default };","map":{"version":3,"sources":["C:\\Users\\耍廢社\\Desktop\\MyProject\\src\\components\\Apply\\UploadFile.js"],"names":["React","PureComponent","UploadFile","state","name","path","preview","data","changeName","e","setState","target","value","changePath","file","files","src","type","URL","createObjectURL","upload","console","log","url","form","FormData","append","fetch","method","body","then","res","cancel","props","closeOverlay"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;IAEqBC,U;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,OAAO,EAAE,IAHL;AAIJC,MAAAA,IAAI,EAAE;AAJF,K;;UAORC,U,GAAa,UAACC,CAAD,EAAO;AAChB,YAAKC,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAEK,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AACH,K;;UAGDC,U,GAAa,UAACJ,CAAD,EAAO;AAChB,UAAMK,IAAI,GAAGL,CAAC,CAACE,MAAF,CAASI,KAAT,CAAe,CAAf,CAAb;;AACA,UAAI,CAACD,IAAL,EAAW;AACP;AACH;;AAED,UAAIE,GAAJ;AAAA,UAAQV,OAAR;AAAA,UAAgBW,IAAI,GAACH,IAAI,CAACG,IAA1B,CANgB,CAQhB;;AACAD,MAAAA,GAAG,GAAGE,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAN;AACAR,MAAAA,OAAO,GAAG;AAAK,QAAA,GAAG,EAAEU,GAAV;AAAe,QAAA,GAAG,EAAC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;;AAIA,YAAKN,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAES,IAAI,CAACV,IAAb;AAAmBG,QAAAA,IAAI,EAAEO,IAAzB;AAA+BR,QAAAA,OAAO,EAAEA;AAAxC,OAAd;AACH,K;;UAGDc,M,GAAS,YAAM;AAEX,UAAMb,IAAI,GAAG,MAAKJ,KAAL,CAAWI,IAAxB;;AACA,UAAI,CAACA,IAAL,EAAW;AACPc,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;AACH,OANU,CAQX;;;AACA,UAAMC,GAAG,GAAG,kCAAZ;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb,CAVW,CAYX;;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBnB,IAApB;AAEAoB,MAAAA,KAAK,CAACJ,GAAD,EAAM;AACPK,QAAAA,MAAM,EAAE,MADD;AAEPC,QAAAA,IAAI,EAAEL;AAFC,OAAN,CAAL,CAGGM,IAHH,CAGQ,UAAAC,GAAG,EAAI;AACXV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACH,OALD;AAMH,K;;UAGDC,M,GAAS,YAAM;AACX,YAAKC,KAAL,CAAWC,YAAX;AACH,K;;;;;;;6BAEQ;AAAA,wBAC2B,KAAK/B,KADhC;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,IADT,eACSA,IADT;AAAA,UACeC,OADf,eACeA,OADf;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,IAAI,GAAGA,IAAH,GAAU,SAArB,CADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,MAAM,EAAC,4BAA1B;AAAuD,QAAA,QAAQ,EAAE,KAAKQ,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,CAFJ,EASI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,OADL,CATJ,CADJ;AAiBH;;;;EA9EmCL,a;;SAAnBC,U","sourcesContent":["import React, { PureComponent } from 'react'\r\n\r\nexport default class UploadFile extends PureComponent {\r\n    state = {\r\n        name: '',\r\n        path: '',\r\n        preview: null,\r\n        data: null\r\n    }\r\n\r\n    changeName = (e) => {\r\n        this.setState({ name: e.target.value })\r\n    }\r\n\r\n    //选择文件\r\n    changePath = (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        let src,preview,type=file.type;\r\n\r\n        // 匹配类型为image/开头的字符串\r\n        src = URL.createObjectURL(file)\r\n        preview = <img src={src} alt='' />\r\n        \r\n \r\n\r\n        this.setState({ path: file.name, data: file, preview: preview })\r\n    }\r\n\r\n    // 上传文件\r\n    upload = () => {\r\n        \r\n        const data = this.state.data;\r\n        if (!data) {\r\n            console.log('未选择文件');\r\n            return;\r\n        }\r\n\r\n        //此处的url应该是服务端提供的上传文件api \r\n        const url = 'http://localhost:3000/api/upload';\r\n        const form = new FormData();\r\n\r\n        //此处的file字段由上传的api决定，可以是其它值\r\n        form.append('file', data);\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            body: form\r\n        }).then(res => {\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n    //关闭模态框\r\n    cancel = () => {\r\n        this.props.closeOverlay();\r\n    }\r\n\r\n    render() {\r\n        const { name, path, preview } = this.state;\r\n        return (\r\n            <div>\r\n                \r\n                <div className='row'>\r\n                    \r\n                    <div className='row-input'>\r\n                        <span>{path ? path : '請選擇文件路徑'}</span>\r\n                        <input type='file' accept='video/*,image/*,text/plain' onChange={this.changePath} />\r\n                    </div>\r\n                </div>\r\n                <div className='media'>\r\n                    {preview}\r\n                </div>\r\n                {/* <button className='primary upload' onClick={this.upload}>上傳</button>\r\n                <button className='primary cancel' onClick={this.cancel}>取消</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}