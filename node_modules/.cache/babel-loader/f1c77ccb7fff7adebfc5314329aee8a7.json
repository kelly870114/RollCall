{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\src\\\\components\\\\Teacher\\\\TeacherDialog.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { withStyles } from '@material-ui/core/styles';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { fetchPostTeacher, fetchPostAccount } from '../../api';\nimport Airtable from 'airtable';\nvar base = new Airtable({\n  apiKey: 'keyA7EKdngjou4Dgy'\n}).base('appcXtOTPnE4QWIIt');\n\nfunction sleep(time) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, time);\n  });\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '800px',\n      margin: 'auto'\n    },\n    container: {\n      width: '400px',\n      paddingLeft: '22%'\n    },\n    textField: {\n      width: 220,\n      marginTop: theme.spacing.unit * 3\n    },\n    formControl: {\n      minWidth: 120,\n      width: 220,\n      marginTop: theme.spacing.unit * 3\n    }\n  };\n};\n\nvar FormDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormDialog, _React$Component);\n\n  function FormDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      teacher_name: '',\n      teacher_phone: '',\n      teacher_email: '',\n      subject: '',\n      open: false,\n      age: '',\n      classData: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var data = {\n        fields: {\n          teacher_id: {},\n          teacher_name: {},\n          teacher_phone: {},\n          teacher_email: {},\n          subject_name: {}\n        }\n      };\n      var accountData = {\n        fields: {\n          account_id: {},\n          account_passwd: {},\n          account_role: {}\n        }\n      };\n      data.fields.teacher_id = \"Teacher\";\n      data.fields.teacher_name = _this.state.teacher_name;\n      data.fields.teacher_phone = _this.state.teacher_phone;\n      data.fields.teacher_email = _this.state.teacher_email;\n      data.fields.subject_name = _this.state.age; //account data\n\n      accountData.fields.account_id = _this.state.teacher_email;\n      accountData.fields.account_passwd = '123';\n      accountData.fields.account_role = 'teacher';\n      fetchPostTeacher(data);\n      fetchPostAccount(accountData);\n\n      _this.setState({\n        open: false\n      });\n\n      sleep(500).then(function () {\n        window.location.reload();\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FormDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      base('Teacher').select({\n        view: 'Grid view'\n      }).eachPage(function (records, fetchNextPage) {\n        _this2.setState({\n          records: records\n        });\n\n        console.log(records);\n\n        var subject_name = _this2.state.records.map(function (record, index) {\n          return record.fields['subject_name'];\n        });\n\n        var count = subject_name.length;\n        var temp = [];\n        var temp2 = [];\n\n        for (var index = 0; index < count; index++) {\n          temp.push(subject_name[index]);\n        }\n\n        var classResult = temp.filter(function (element, index, arr) {\n          return arr.indexOf(element) === index;\n        });\n\n        for (index = 0; index < classResult.length; index++) {\n          temp2.push(classResult[index]);\n        }\n\n        _this2.setState({\n          classData: temp2\n        });\n\n        fetchNextPage();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outlined\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u8001\\u5E2B\"), React.createElement(Dialog, {\n        className: classes.root,\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u8001\\u5E2B\\u8CC7\\u6599\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-name\",\n        label: \"Name\",\n        className: classes.textField,\n        value: this.state.name,\n        onChange: this.handleChange('teacher_name'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-name\",\n        label: \"Phone\",\n        className: classes.textField,\n        value: this.state.phone,\n        onChange: this.handleChange('teacher_phone'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-email-input\",\n        label: \"Email\",\n        className: classes.textField,\n        value: this.state.email,\n        onChange: this.handleChange('teacher_email'),\n        type: \"email\",\n        name: \"email\",\n        autoComplete: \"email\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref) {\n          _this3.InputLabelRef = _ref;\n        },\n        htmlFor: \"outlined-subject-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Subject\"), React.createElement(Select // value={this.state.subject}\n      // onChange={this.handleChange('subject')}\n      // input={\n      //     <OutlinedInput\n      //         labelWidth={this.state.labelWidth}\n      //         name=\"subject\"\n      //         id=\"outlined-subject-simple\"\n      //     />\n      // }\n      , {\n        value: this.state.age,\n        onChange: this.handleChange('age'),\n        input: React.createElement(OutlinedInput, {\n          name: \"Age\",\n          labelWidth: this.state.labelWidth,\n          id: \"outlined-asubject-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"\\u79D1\\u76EE\")), this.state.classData.map(function (n, index) {\n        return React.createElement(MenuItem, {\n          value: n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, n);\n      })))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"\\u53D6\\u6D88\"), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\"))));\n    }\n  }]);\n\n  return FormDialog;\n}(React.Component);\n\nexport default withStyles(styles)(FormDialog);","map":{"version":3,"sources":["C:\\Users\\耍廢社\\Desktop\\MyProject\\src\\components\\Teacher\\TeacherDialog.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","withStyles","OutlinedInput","InputLabel","MenuItem","FormControl","Select","fetchPostTeacher","fetchPostAccount","Airtable","base","apiKey","sleep","time","Promise","resolve","setTimeout","styles","theme","root","width","margin","container","paddingLeft","textField","marginTop","spacing","unit","formControl","minWidth","FormDialog","state","teacher_name","teacher_phone","teacher_email","subject","open","age","classData","handleSubmit","e","preventDefault","data","fields","teacher_id","subject_name","accountData","account_id","account_passwd","account_role","setState","then","window","location","reload","handleChange","name","event","target","value","handleClickOpen","handleClose","select","view","eachPage","records","fetchNextPage","console","log","map","record","index","count","length","temp","temp2","push","classResult","filter","element","arr","indexOf","classes","props","phone","email","ref","InputLabelRef","labelWidth","n","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { fetchPostTeacher, fetchPostAccount } from '../../api';\r\nimport Airtable from 'airtable';\r\n\r\nconst base = new Airtable({ apiKey: 'keyA7EKdngjou4Dgy' }).base('appcXtOTPnE4QWIIt');\r\n\r\nfunction sleep (time) {\r\n    return new Promise((resolve) => setTimeout(resolve, time));\r\n}\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        margin: 'auto',\r\n    },\r\n    container: {\r\n        width: '400px',\r\n        paddingLeft: '22%',\r\n    },\r\n    textField: {\r\n        width: 220,\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    formControl: {\r\n        minWidth: 120,\r\n        width: 220,\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n});\r\n\r\nclass FormDialog extends React.Component {\r\n    state = {\r\n        teacher_name: '',\r\n        teacher_phone: '',\r\n        teacher_email: '',\r\n        subject: '',\r\n        open: false,\r\n        age: '',\r\n        classData: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        base('Teacher').select({ view: 'Grid view' })\r\n            .eachPage(\r\n                (records, fetchNextPage) => {\r\n                    this.setState({ records });\r\n                    console.log(records);\r\n                    const subject_name = this.state.records.map((record, index) => record.fields['subject_name']);\r\n\r\n                    var count = subject_name.length;\r\n                    var temp = [];\r\n                    var temp2 = [];\r\n                    for (var index = 0; index < count; index++) {\r\n                        temp.push(subject_name[index]);\r\n                    }\r\n\r\n                    var classResult = temp.filter(function (element, index, arr) {\r\n                        return arr.indexOf(element) === index;\r\n                    });\r\n\r\n                    for (index = 0; index < classResult.length; index++) {\r\n                        temp2.push(classResult[index]);\r\n                    }\r\n\r\n                    this.setState({ classData: temp2 });\r\n\r\n                    fetchNextPage();\r\n                }\r\n            );\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let data = { fields: { teacher_id: {}, teacher_name: {}, teacher_phone: {}, teacher_email: {}, subject_name: {} } };\r\n        let accountData = {fields: {account_id: {}, account_passwd:{}, account_role:{} }};\r\n        data.fields.teacher_id = \"Teacher\";\r\n        data.fields.teacher_name = this.state.teacher_name;\r\n        data.fields.teacher_phone = this.state.teacher_phone;\r\n        data.fields.teacher_email = this.state.teacher_email;\r\n        data.fields.subject_name = this.state.age;\r\n\r\n        //account data\r\n        accountData.fields.account_id = this.state.teacher_email;\r\n        accountData.fields.account_passwd = '123';\r\n        accountData.fields.account_role = 'teacher';\r\n\r\n        fetchPostTeacher(data);\r\n        fetchPostAccount(accountData);\r\n        this.setState({ open: false });\r\n\r\n        sleep(500).then(() => {\r\n            window.location.reload();\r\n        })\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Button variant=\"outlined\" onClick={this.handleClickOpen}>\r\n                    新增老師\r\n                </Button>\r\n                <Dialog className={classes.root}\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">新增老師資料</DialogTitle>\r\n                    <DialogContent>\r\n                        <form className={classes.container} noValidate autoComplete=\"off\">\r\n                            <div>\r\n                                <TextField\r\n                                    id=\"outlined-name\"\r\n                                    label=\"Name\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.name}\r\n                                    onChange={this.handleChange('teacher_name')}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <TextField\r\n                                    id=\"outlined-name\"\r\n                                    label=\"Phone\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.phone}\r\n                                    onChange={this.handleChange('teacher_phone')}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <TextField\r\n                                    id=\"outlined-email-input\"\r\n                                    label=\"Email\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleChange('teacher_email')}\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel\r\n                                        ref={ref => {\r\n                                            this.InputLabelRef = ref;\r\n                                        }}\r\n                                        htmlFor=\"outlined-subject-simple\"\r\n                                    >\r\n                                        Subject\r\n                                </InputLabel>\r\n                                    <Select\r\n                                        // value={this.state.subject}\r\n                                        // onChange={this.handleChange('subject')}\r\n                                        // input={\r\n                                        //     <OutlinedInput\r\n                                        //         labelWidth={this.state.labelWidth}\r\n                                        //         name=\"subject\"\r\n                                        //         id=\"outlined-subject-simple\"\r\n                                        //     />\r\n                                        // }\r\n                                        value={this.state.age}\r\n                                        onChange={this.handleChange('age')}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                                name=\"Age\"\r\n                                                labelWidth={this.state.labelWidth}\r\n                                                id=\"outlined-asubject-simple\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <MenuItem value=\"1\">\r\n                                            <em>科目</em>\r\n                                        </MenuItem>\r\n                                        {(this.state.classData).map((n, index) => {\r\n                                            return (\r\n                                                <MenuItem value={n}>{n}</MenuItem>\r\n                                            );\r\n                                        })}\r\n                                        {/* <MenuItem value={10}>國文</MenuItem>\r\n                                        <MenuItem value={20}>數學</MenuItem>\r\n                                        <MenuItem value={30}>英文</MenuItem> */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">取消</Button>\r\n                        <Button onClick={this.handleSubmit} color=\"primary\">新增</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(FormDialog);"]},"metadata":{},"sourceType":"module"}