{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\src\\\\components\\\\Announcement\\\\AnnounceTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Airtable from 'airtable';\nvar base = new Airtable({\n  apiKey: 'keyA7EKdngjou4Dgy'\n}).base('appcXtOTPnE4QWIIt');\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '80%',\n      margin: '0 auto',\n      marginTop: theme.spacing.unit,\n      backgroundColor: '#212832',\n      border: 'white 1px solid',\n      overflowX: 'auto'\n    },\n    // table: {\n    //     minWidth: 700,\n    // },\n    head: {\n      fontSize: '16pt',\n      backgroundColor: '#FFBF5F',\n      color: '#111B24'\n    },\n    content: {\n      fontSize: '14pt'\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(time, title, body) {\n  id += 1; //time = time.split(\"-\")[0] + \"/\" + time.split(\"-\")[1] + \"/\" + time.split(\"-\")[2];\n\n  time = time.split(\"T\")[0];\n  return {\n    id: id,\n    time: time,\n    title: title,\n    body: body\n  };\n}\n\nvar SimpleTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SimpleTable, _React$Component);\n\n  function SimpleTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SimpleTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SimpleTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rows: []\n    };\n    return _this;\n  }\n\n  _createClass(SimpleTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      base('Announcement').select({\n        view: 'Grid view'\n      }).eachPage(function (records, fetchNextPage) {\n        _this2.setState({\n          records: records\n        });\n\n        console.log(records);\n\n        var announce_date = _this2.state.records.map(function (record, index) {\n          return record.fields['announce_date'];\n        });\n\n        var announce_title = _this2.state.records.map(function (record, index) {\n          return record.fields['announce_title'];\n        });\n\n        var announce_body = _this2.state.records.map(function (record, index) {\n          return record.fields['announce_body'];\n        });\n\n        var count = announce_title.length;\n        var temp = [];\n\n        for (var index = 0; index < count; index++) {\n          temp.push(createData(announce_date[index], announce_title[index], announce_body[index]));\n        }\n\n        _this2.setState({\n          rows: temp\n        });\n\n        fetchNextPage();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var rows = this.state.rows;\n      return React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        className: classes.head,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"\\u767C\\u4F48\\u65E5\\u671F\"), React.createElement(TableCell, {\n        className: classes.head,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"\\u6A19\\u984C\"), React.createElement(TableCell, {\n        className: classes.head,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"\\u5167\\u5BB9\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, rows.map(function (row) {\n        return React.createElement(TableRow, {\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: classes.content,\n          style: {\n            width: '20%'\n          },\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, row.time), React.createElement(TableCell, {\n          className: classes.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, row.title), React.createElement(TableCell, {\n          className: classes.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, row.body));\n      }))));\n    }\n  }]);\n\n  return SimpleTable;\n}(React.Component); // function SimpleTable(props) {\n//     const { classes } = props;\n//     return (\n//         <Paper className={classes.root}>\n//             <Table className={classes.table}>\n//                 <TableHead >\n//                     <TableRow>\n//                         <TableCell className={classes.head}>發佈日期</TableCell>\n//                         <TableCell className={classes.head} >標題</TableCell>\n//                     </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                     {rows.map(row => (\n//                         <TableRow key={row.id}>\n//                             <TableCell className={classes.content} style={{width:'15%'}} component=\"th\" scope=\"row\">{row.time}</TableCell>\n//                             <TableCell className={classes.content}>{row.title}</TableCell>\n//                         </TableRow>\n//                     ))}\n//                 </TableBody>\n//             </Table>\n//         </Paper>\n//     );\n// }\n\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimpleTable);","map":{"version":3,"sources":["C:\\Users\\耍廢社\\Desktop\\MyProject\\src\\components\\Announcement\\AnnounceTable.js"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Airtable","base","apiKey","styles","theme","root","width","margin","marginTop","spacing","unit","backgroundColor","border","overflowX","head","fontSize","color","content","id","createData","time","title","body","split","SimpleTable","state","rows","select","view","eachPage","records","fetchNextPage","setState","console","log","announce_date","map","record","index","fields","announce_title","announce_body","count","length","temp","push","classes","props","table","row","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Airtable from 'airtable';\r\n\r\nconst base = new Airtable({ apiKey: 'keyA7EKdngjou4Dgy' }).base('appcXtOTPnE4QWIIt');\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '80%',\r\n        margin: '0 auto',\r\n        marginTop: theme.spacing.unit,\r\n        backgroundColor: '#212832',\r\n        border: 'white 1px solid',\r\n        overflowX: 'auto',\r\n    },\r\n    // table: {\r\n    //     minWidth: 700,\r\n    // },\r\n    head: {\r\n        fontSize: '16pt',\r\n        backgroundColor: '#FFBF5F',\r\n        color: '#111B24',\r\n    },\r\n    content: {\r\n        fontSize: '14pt',\r\n    },\r\n});\r\n\r\nlet id = 0;\r\n\r\nfunction createData(time, title, body) {\r\n    id += 1;\r\n    //time = time.split(\"-\")[0] + \"/\" + time.split(\"-\")[1] + \"/\" + time.split(\"-\")[2];\r\n    time = time.split(\"T\")[0];\r\n    return { id, time, title, body };\r\n}\r\n\r\nclass SimpleTable extends React.Component {\r\n    state = {\r\n        rows: [],\r\n    }\r\n    componentDidMount() {\r\n        base('Announcement').select({ view: 'Grid view' })\r\n            .eachPage(\r\n                (records, fetchNextPage) => {\r\n                    this.setState({ records });\r\n                    console.log(records);\r\n                    const announce_date = this.state.records.map((record, index) => record.fields['announce_date']);\r\n                    const announce_title = this.state.records.map((record, index) => record.fields['announce_title']);\r\n                    const announce_body = this.state.records.map((record, index) => record.fields['announce_body']);\r\n\r\n                    var count = announce_title.length;\r\n                    var temp = [];\r\n\r\n\r\n                    for (var index = 0; index < count; index++) {\r\n                        temp.push(createData(announce_date[index], announce_title[index], announce_body[index]));\r\n\r\n                    }\r\n                    this.setState({ rows: temp });\r\n\r\n                    fetchNextPage();\r\n                }\r\n            );\r\n\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { rows } = this.state;\r\n\r\n\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableHead >\r\n                        <TableRow>\r\n                            <TableCell className={classes.head}>發佈日期</TableCell>\r\n                            <TableCell className={classes.head} >標題</TableCell>\r\n                            <TableCell className={classes.head} >內容</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map(row => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell className={classes.content} style={{ width: '20%' }} component=\"th\" scope=\"row\">{row.time}</TableCell>\r\n                                <TableCell className={classes.content}>{row.title}</TableCell>\r\n                                <TableCell className={classes.content}>{row.body}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\n// function SimpleTable(props) {\r\n//     const { classes } = props;\r\n\r\n//     return (\r\n//         <Paper className={classes.root}>\r\n//             <Table className={classes.table}>\r\n//                 <TableHead >\r\n//                     <TableRow>\r\n//                         <TableCell className={classes.head}>發佈日期</TableCell>\r\n//                         <TableCell className={classes.head} >標題</TableCell>\r\n//                     </TableRow>\r\n//                 </TableHead>\r\n//                 <TableBody>\r\n//                     {rows.map(row => (\r\n//                         <TableRow key={row.id}>\r\n//                             <TableCell className={classes.content} style={{width:'15%'}} component=\"th\" scope=\"row\">{row.time}</TableCell>\r\n//                             <TableCell className={classes.content}>{row.title}</TableCell>\r\n//                         </TableRow>\r\n//                     ))}\r\n//                 </TableBody>\r\n//             </Table>\r\n//         </Paper>\r\n//     );\r\n// }\r\n\r\nSimpleTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleTable);"]},"metadata":{},"sourceType":"module"}