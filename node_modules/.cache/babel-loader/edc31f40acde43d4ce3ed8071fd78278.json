{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\src\\\\components\\\\Classpage\\\\Grade.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Upload from '@material-ui/icons/CreateNewFolderRounded';\nimport { withStyles } from '@material-ui/core/styles'; // import { fromJS, List, Map } from 'immutable'\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport XLSX from 'xlsx'; //import { fetchPostSchedule } from '../../api';\n// import Airtable from 'airtable';\n// const TABLE_NAME = 'TestScore';\n// const base = new Airtable({ apiKey: 'keyA7EKdngjou4Dgy' }).base('appcXtOTPnE4QWIIt');\n// const table = base(TABLE_NAME);\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      backgroundColor: '#212832',\n      border: '0.8px #FFBF5F solid',\n      borderRadius: '2px',\n      width: '80%',\n      minWidth: '1000px',\n      marginTop: theme.spacing.unit * 5,\n      margin: '0 auto',\n      padding: '3%'\n    },\n    button: {\n      backgroundColor: '#111B24',\n      color: 'white'\n    },\n    UploadIcon: {\n      margin: '0 auto'\n    },\n    input: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      top: 0,\n      left: 0,\n      outline: 'none',\n      opacity: 0\n    },\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto',\n      backgroundColor: '#212832',\n      border: 'white 1px solid'\n    },\n    head: {\n      fontSize: '14pt',\n      color: '#FFBF5F'\n    },\n    content: {\n      fontSize: '14pt'\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(name, number, grade, rank) {\n  id += 1;\n  return {\n    id: id,\n    name: name,\n    number: number,\n    grade: grade,\n    rank: rank\n  };\n}\n\nvar Grade =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Grade, _Component);\n\n  function Grade() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Grade);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Grade)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rows: [] //rowsInit:[],\n      //class_id:'',\n      // componentWillReceiveProps(nextProps) {\n      //     if (nextProps.class_id !== this.state.class_id) {\n      //         var count = this.state.rowsInit.length;\n      //         var temp = [];\n      //         for (var index = 0; index < count; index++) {\n      //             if (nextProps.class_id === this.state.rowsInit[index].class_id) {\n      //                 temp.push(this.state.rowsInit[index]);\n      //                 this.setState({ rows: temp });\n      //             }\n      //         }\n      //         this.setState({ class_id: nextProps.class_id });\n      //     }\n      // }\n      //     //airtable\n      // componentDidMount() {\n      //     //const fileterSentence = 'AND(class_id = ' + this.props.class_id + ')'\n      //     table.select({\n      //         //filterByFormula: fileterSentence,\n      //         view: \"Grid view\",\n      //         //maxRecords: 1\n      //     }).eachPage((records, fetchNextPage) => {\n      //         this.setState({ records });\n      //         const class_id = this.state.records.map((record, index) => record.fields['class_id']);\n      //         const student_id = this.state.records.map((record, index) => record.fields['student_id']);\n      //         const test_score = this.state.records.map((record, index) => record.fields['test_score']);\n      //          var temp = [];\n      //         for(var index = 0; index < schedule_date.length; index++) {\n      //             temp.push(createData(\"name\",student_id[index],test_score[index],\"rank\"));  \n      //         }\n      //         this.setState({ rows : temp });\n      //         this.setState({ rowsInit : temp });\n      //         fetchNextPage();\n      //     }\n      //     );\n      // }\n\n    };\n\n    _this.onImportExcel = function (file) {\n      // 獲取上傳的文件對象\n      var files = file.target.files; // 通過FileReader讀取文件\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function (event) {\n        try {\n          var result = event.target.result; // 以二進制方式讀取得到整份excel表格\n\n          var workbook = XLSX.read(result, {\n            type: 'binary'\n          }); // 儲存獲取到的數據\n\n          var data = []; // 對每張工作表行行讀取（預設只讀取第一張表）\n\n          for (var sheet in workbook.Sheets) {\n            // esline-disable-next-line\n            if (workbook.Sheets.hasOwnProperty(sheet)) {\n              // 利用 sheet_to_json 方法將 excel 轉成 json 數據\n              data = data.concat(XLSX.utils.sheet_to_json(workbook.Sheets[sheet])); // break;\n            }\n          } // 最終獲取到且格式化的 json 數據\n\n\n          _this.setState({\n            data: data\n          });\n\n          var grade_studentName = _this.state.data.map(function (data, index) {\n            return data['grade_studentName'];\n          });\n\n          var grade_studentId = _this.state.data.map(function (data, index) {\n            return data['grade_studentId'];\n          });\n\n          var grade_studentGrade = _this.state.data.map(function (data, index) {\n            return data['grade_studentGrade'];\n          });\n\n          var grade_studentRank = _this.state.data.map(function (data, index) {\n            return data['grade_studentRank'];\n          });\n\n          for (var index = 0; index < id; index++) {\n            data.push(createData(grade_studentName[index], grade_studentId[index], grade_studentGrade[index], grade_studentRank[index]));\n          }\n\n          _this.setState({\n            rows: data\n          });\n\n          console.log(data);\n          console.log(data[0]);\n          console.log(data[0].grade_studentName);\n          console.log(data[0].grade_studentId);\n        } catch (e) {// message.error('文件類型不正确！');\n        }\n      };\n\n      fileReader.readAsBinaryString(files[0]);\n    };\n\n    return _this;\n  }\n\n  _createClass(Grade, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var rows = this.state.rows;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          borderColor: '#FFBF5F'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        type: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: classes.input,\n        type: \"file\",\n        accept: \".xlsx, .xls\",\n        onChange: this.onImportExcel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"\\u6210\\u7E3E\\u4E0A\\u50B3\")), React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        className: classes.head,\n        style: {\n          width: '25%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"\\u5B78\\u751F\\u59D3\\u540D\"), React.createElement(TableCell, {\n        className: classes.head,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"\\u5B78\\u865F\"), React.createElement(TableCell, {\n        className: classes.head,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"\\u5206\\u6578\"), React.createElement(TableCell, {\n        className: classes.head,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"\\u6392\\u540D\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, rows.map(function (row) {\n        return React.createElement(TableRow, {\n          hover: true,\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: classes.content,\n          style: {\n            width: '25%'\n          },\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, row.grade_studentName), React.createElement(TableCell, {\n          className: classes.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, row.grade_studentId), React.createElement(TableCell, {\n          className: classes.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, row.grade_studentGrade), React.createElement(TableCell, {\n          className: classes.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, row.grade_studentRank));\n      }))))));\n    }\n  }]);\n\n  return Grade;\n}(Component);\n\nexport default withStyles(styles)(Grade);","map":{"version":3,"sources":["C:\\Users\\耍廢社\\Desktop\\MyProject\\src\\components\\Classpage\\Grade.js"],"names":["React","Component","Button","Card","Upload","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","XLSX","styles","theme","card","backgroundColor","border","borderRadius","width","minWidth","marginTop","spacing","unit","margin","padding","button","color","UploadIcon","input","position","height","top","left","outline","opacity","root","overflowX","head","fontSize","content","id","createData","name","number","grade","rank","Grade","state","rows","onImportExcel","file","files","target","fileReader","FileReader","onload","event","result","workbook","read","type","data","sheet","Sheets","hasOwnProperty","concat","utils","sheet_to_json","setState","grade_studentName","map","index","grade_studentId","grade_studentGrade","grade_studentRank","push","console","log","e","readAsBinaryString","classes","props","borderColor","table","row"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;AACA;AAEA;AACA;AACA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,eAAe,EAAE,SADf;AAEFC,MAAAA,MAAM,EAAE,qBAFN;AAGFC,MAAAA,YAAY,EAAE,KAHZ;AAIFC,MAAAA,KAAK,EAAE,KAJL;AAKFC,MAAAA,QAAQ,EAAE,QALR;AAMFC,MAAAA,SAAS,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,GAAqB,CAN9B;AAOFC,MAAAA,MAAM,EAAE,QAPN;AAQFC,MAAAA,OAAO,EAAC;AARN,KADe;AAWrBC,IAAAA,MAAM,EAAE;AACJV,MAAAA,eAAe,EAAE,SADb;AAEJW,MAAAA,KAAK,EAAE;AAFH,KAXa;AAerBC,IAAAA,UAAU,EAAE;AACRJ,MAAAA,MAAM,EAAE;AADA,KAfS;AAkBrBK,IAAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,UADP;AAEHX,MAAAA,KAAK,EAAE,MAFJ;AAGHY,MAAAA,MAAM,EAAE,MAHL;AAIHC,MAAAA,GAAG,EAAE,CAJF;AAKHC,MAAAA,IAAI,EAAE,CALH;AAMHC,MAAAA,OAAO,EAAE,MANN;AAOHC,MAAAA,OAAO,EAAE;AAPN,KAlBc;AA2BrBC,IAAAA,IAAI,EAAE;AACFjB,MAAAA,KAAK,EAAE,MADL;AAEFE,MAAAA,SAAS,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,GAAqB,CAF9B;AAGFc,MAAAA,SAAS,EAAE,MAHT;AAIFrB,MAAAA,eAAe,EAAE,SAJf;AAKFC,MAAAA,MAAM,EAAE;AALN,KA3Be;AAkCrBqB,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE,MADR;AAEFZ,MAAAA,KAAK,EAAE;AAFL,KAlCe;AAsCrBa,IAAAA,OAAO,EAAE;AACLD,MAAAA,QAAQ,EAAE;AADL;AAtCY,GAAL;AAAA,CAApB;;AA2CA,IAAIE,EAAE,GAAG,CAAT;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+C;AAC3CL,EAAAA,EAAE,IAAI,CAAN;AACA,SAAO;AAAEA,IAAAA,EAAE,EAAFA,EAAF;AAAME,IAAAA,IAAI,EAAJA,IAAN;AAAYC,IAAAA,MAAM,EAANA,MAAZ;AAAoBC,IAAAA,KAAK,EAALA,KAApB;AAA2BC,IAAAA,IAAI,EAAJA;AAA3B,GAAP;AACH;;IAEKC,K;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,EADF,CAEJ;AACA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AA1CQ,K;;UA6CRC,a,GAAgB,UAAAC,IAAI,EAAI;AACpB;AADoB,UAEZC,KAFY,GAEFD,IAAI,CAACE,MAFH,CAEZD,KAFY,EAGpB;;AACA,UAAME,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;AACAD,MAAAA,UAAU,CAACE,MAAX,GAAoB,UAAAC,KAAK,EAAI;AACzB,YAAI;AAAA,cACQC,MADR,GACmBD,KAAK,CAACJ,MADzB,CACQK,MADR,EAEA;;AACA,cAAMC,QAAQ,GAAG/C,IAAI,CAACgD,IAAL,CAAUF,MAAV,EAAkB;AAAEG,YAAAA,IAAI,EAAE;AAAR,WAAlB,CAAjB,CAHA,CAIA;;AACA,cAAIC,IAAI,GAAG,EAAX,CALA,CAMA;;AACA,eAAK,IAAMC,KAAX,IAAoBJ,QAAQ,CAACK,MAA7B,EAAqC;AACjC;AACA,gBAAIL,QAAQ,CAACK,MAAT,CAAgBC,cAAhB,CAA+BF,KAA/B,CAAJ,EAA2C;AACvC;AACAD,cAAAA,IAAI,GAAGA,IAAI,CAACI,MAAL,CAAYtD,IAAI,CAACuD,KAAL,CAAWC,aAAX,CAAyBT,QAAQ,CAACK,MAAT,CAAgBD,KAAhB,CAAzB,CAAZ,CAAP,CAFuC,CAGvC;AACH;AACJ,WAdD,CAeA;;;AACA,gBAAKM,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAJA;AAAF,WAAd;;AACA,cAAMQ,iBAAiB,GAAG,MAAKtB,KAAL,CAAWc,IAAX,CAAgBS,GAAhB,CAAoB,UAACT,IAAD,EAAOU,KAAP;AAAA,mBAAiBV,IAAI,CAAC,mBAAD,CAArB;AAAA,WAApB,CAA1B;;AACA,cAAMW,eAAe,GAAG,MAAKzB,KAAL,CAAWc,IAAX,CAAgBS,GAAhB,CAAoB,UAACT,IAAD,EAAOU,KAAP;AAAA,mBAAiBV,IAAI,CAAC,iBAAD,CAArB;AAAA,WAApB,CAAxB;;AACA,cAAMY,kBAAkB,GAAG,MAAK1B,KAAL,CAAWc,IAAX,CAAgBS,GAAhB,CAAoB,UAACT,IAAD,EAAOU,KAAP;AAAA,mBAAiBV,IAAI,CAAC,oBAAD,CAArB;AAAA,WAApB,CAA3B;;AACA,cAAMa,iBAAiB,GAAG,MAAK3B,KAAL,CAAWc,IAAX,CAAgBS,GAAhB,CAAoB,UAACT,IAAD,EAAOU,KAAP;AAAA,mBAAiBV,IAAI,CAAC,mBAAD,CAArB;AAAA,WAApB,CAA1B;;AAEA,eAAK,IAAIU,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG/B,EAA5B,EAAgC+B,KAAK,EAArC,EAAyC;AACrCV,YAAAA,IAAI,CAACc,IAAL,CAAUlC,UAAU,CAAC4B,iBAAiB,CAACE,KAAD,CAAlB,EAA2BC,eAAe,CAACD,KAAD,CAA1C,EAAmDE,kBAAkB,CAACF,KAAD,CAArE,EAA8EG,iBAAiB,CAACH,KAAD,CAA/F,CAApB;AAEH;;AAED,gBAAKH,QAAL,CAAc;AAAEpB,YAAAA,IAAI,EAAEa;AAAR,WAAd;;AACAe,UAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACAe,UAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAAC,CAAD,CAAhB;AACAe,UAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAAC,CAAD,CAAJ,CAAQQ,iBAApB;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAAC,CAAD,CAAJ,CAAQW,eAApB;AACH,SAhCD,CAgCE,OAAOM,CAAP,EAAU,CACR;AACH;AACJ,OApCD;;AAqCAzB,MAAAA,UAAU,CAAC0B,kBAAX,CAA8B5B,KAAK,CAAC,CAAD,CAAnC;AACH,K;;;;;;;6BACQ;AAAA,UAEG6B,OAFH,GAEe,KAAKC,KAFpB,CAEGD,OAFH;AAAA,UAGGhC,IAHH,GAGY,KAAKD,KAHjB,CAGGC,IAHH;AAKL,aACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEgC,OAAO,CAAClE,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE;AAAEoE,UAAAA,WAAW,EAAE;AAAf,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEF,OAAO,CAACvD,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,SAAS,EAAEuD,OAAO,CAACpD,KAA1B;AAAiC,QAAA,IAAI,EAAC,MAAtC;AAA6C,QAAA,MAAM,EAAC,aAApD;AAAkE,QAAA,QAAQ,EAAE,KAAKqB,aAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAHJ,CADJ,EAMI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE+B,OAAO,CAAC7C,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE6C,OAAO,CAACG,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEH,OAAO,CAAC3C,IAA9B;AAAoC,QAAA,KAAK,EAAE;AAAEnB,UAAAA,KAAK,EAAE;AAAT,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAE8D,OAAO,CAAC3C,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAE2C,OAAO,CAAC3C,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,EAII,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAE2C,OAAO,CAAC3C,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CADJ,CADJ,EASI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKW,IAAI,CAACsB,GAAL,CAAS,UAAAc,GAAG;AAAA,eACT,oBAAC,QAAD;AAAU,UAAA,KAAK,MAAf;AAAgB,UAAA,GAAG,EAAEA,GAAG,CAAC5C,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAEwC,OAAO,CAACzC,OAA9B;AAAuC,UAAA,KAAK,EAAE;AAAErB,YAAAA,KAAK,EAAE;AAAT,WAA9C;AAAgE,UAAA,SAAS,EAAC,IAA1E;AAA+E,UAAA,KAAK,EAAC,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4FkE,GAAG,CAACf,iBAAhG,CADJ,EAEI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAEW,OAAO,CAACzC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwC6C,GAAG,CAACZ,eAA5C,CAFJ,EAGI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAEQ,OAAO,CAACzC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwC6C,GAAG,CAACX,kBAA5C,CAHJ,EAII,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAEO,OAAO,CAACzC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwC6C,GAAG,CAACV,iBAA5C,CAJJ,CADS;AAAA,OAAZ,CADL,CATJ,CADJ,CANJ,CADJ,CADJ;AAkCH;;;;EAjIe1E,S;;AAoIpB,eAAeI,UAAU,CAACQ,MAAD,CAAV,CAAmBkC,KAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport Upload from '@material-ui/icons/CreateNewFolderRounded';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import { fromJS, List, Map } from 'immutable'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport XLSX from 'xlsx';\r\n//import { fetchPostSchedule } from '../../api';\r\n// import Airtable from 'airtable';\r\n\r\n// const TABLE_NAME = 'TestScore';\r\n// const base = new Airtable({ apiKey: 'keyA7EKdngjou4Dgy' }).base('appcXtOTPnE4QWIIt');\r\n// const table = base(TABLE_NAME);\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        backgroundColor: '#212832',\r\n        border: '0.8px #FFBF5F solid',\r\n        borderRadius: '2px',\r\n        width: '80%',\r\n        minWidth: '1000px',\r\n        marginTop: theme.spacing.unit * 5,\r\n        margin: '0 auto',\r\n        padding:'3%'\r\n    },\r\n    button: {\r\n        backgroundColor: '#111B24',\r\n        color: 'white',\r\n    },\r\n    UploadIcon: {\r\n        margin: '0 auto',\r\n    },\r\n    input: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        top: 0,\r\n        left: 0,\r\n        outline: 'none',\r\n        opacity: 0,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n        backgroundColor: '#212832',\r\n        border: 'white 1px solid',\r\n    },\r\n    head: {\r\n        fontSize: '14pt',\r\n        color: '#FFBF5F',\r\n    },\r\n    content: {\r\n        fontSize: '14pt',\r\n    },\r\n});\r\n\r\nlet id = 0;\r\nfunction createData(name, number, grade, rank) {\r\n    id += 1;\r\n    return { id, name, number, grade, rank };\r\n}\r\n\r\nclass Grade extends Component {\r\n    state = {\r\n        rows: [],\r\n        //rowsInit:[],\r\n        //class_id:'',\r\n    }\r\n    // componentWillReceiveProps(nextProps) {\r\n    //     if (nextProps.class_id !== this.state.class_id) {\r\n    //         var count = this.state.rowsInit.length;\r\n    //         var temp = [];\r\n    //         for (var index = 0; index < count; index++) {\r\n    //             if (nextProps.class_id === this.state.rowsInit[index].class_id) {\r\n    //                 temp.push(this.state.rowsInit[index]);\r\n    //                 this.setState({ rows: temp });\r\n    //             }\r\n    //         }\r\n    //         this.setState({ class_id: nextProps.class_id });\r\n    //     }\r\n    // }\r\n    //     //airtable\r\n    // componentDidMount() {\r\n    //     //const fileterSentence = 'AND(class_id = ' + this.props.class_id + ')'\r\n    //     table.select({\r\n    //         //filterByFormula: fileterSentence,\r\n    //         view: \"Grid view\",\r\n    //         //maxRecords: 1\r\n    //     }).eachPage((records, fetchNextPage) => {\r\n    //         this.setState({ records });\r\n\r\n    //         const class_id = this.state.records.map((record, index) => record.fields['class_id']);\r\n    //         const student_id = this.state.records.map((record, index) => record.fields['student_id']);\r\n    //         const test_score = this.state.records.map((record, index) => record.fields['test_score']);\r\n\r\n    //          var temp = [];\r\n    //         for(var index = 0; index < schedule_date.length; index++) {\r\n    //             temp.push(createData(\"name\",student_id[index],test_score[index],\"rank\"));  \r\n    //         }\r\n\r\n    //         this.setState({ rows : temp });\r\n    //         this.setState({ rowsInit : temp });\r\n    //         fetchNextPage();\r\n    //     }\r\n    //     );\r\n    // }\r\n\r\n\r\n    onImportExcel = file => {\r\n        // 獲取上傳的文件對象\r\n        const { files } = file.target;\r\n        // 通過FileReader讀取文件\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = event => {\r\n            try {\r\n                const { result } = event.target;\r\n                // 以二進制方式讀取得到整份excel表格\r\n                const workbook = XLSX.read(result, { type: 'binary' });\r\n                // 儲存獲取到的數據\r\n                let data = [];\r\n                // 對每張工作表行行讀取（預設只讀取第一張表）\r\n                for (const sheet in workbook.Sheets) {\r\n                    // esline-disable-next-line\r\n                    if (workbook.Sheets.hasOwnProperty(sheet)) {\r\n                        // 利用 sheet_to_json 方法將 excel 轉成 json 數據\r\n                        data = data.concat(XLSX.utils.sheet_to_json(workbook.Sheets[sheet]));\r\n                        // break;\r\n                    }\r\n                }\r\n                // 最終獲取到且格式化的 json 數據\r\n                this.setState({ data });\r\n                const grade_studentName = this.state.data.map((data, index) => data['grade_studentName']);\r\n                const grade_studentId = this.state.data.map((data, index) => data['grade_studentId']);\r\n                const grade_studentGrade = this.state.data.map((data, index) => data['grade_studentGrade']);\r\n                const grade_studentRank = this.state.data.map((data, index) => data['grade_studentRank']);\r\n\r\n                for (var index = 0; index < id; index++) {\r\n                    data.push(createData(grade_studentName[index], grade_studentId[index], grade_studentGrade[index], grade_studentRank[index]));\r\n\r\n                }\r\n\r\n                this.setState({ rows: data });\r\n                console.log(data);\r\n                console.log(data[0]);\r\n                console.log(data[0].grade_studentName);\r\n                console.log(data[0].grade_studentId);\r\n            } catch (e) {\r\n                // message.error('文件類型不正确！');\r\n            }\r\n        };\r\n        fileReader.readAsBinaryString(files[0]);\r\n    }\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n        const { rows } = this.state;\r\n\r\n        return (\r\n            <Card className={classes.card} >\r\n                <div style={{ borderColor: '#FFBF5F' }}>\r\n                    <Button className={classes.button}>\r\n                        <Upload type='upload' />\r\n                        <input className={classes.input} type='file' accept='.xlsx, .xls' onChange={this.onImportExcel} />\r\n                        <span>成績上傳</span>\r\n                    </Button>\r\n                    <Paper className={classes.root}>\r\n                        <Table className={classes.table}>\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    <TableCell className={classes.head} style={{ width: '25%' }}>學生姓名</TableCell>\r\n                                    <TableCell className={classes.head} >學號</TableCell>\r\n                                    <TableCell className={classes.head} >分數</TableCell>\r\n                                    <TableCell className={classes.head} >排名</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map(row => (\r\n                                    <TableRow hover key={row.id}>\r\n                                        <TableCell className={classes.content} style={{ width: '25%' }} component=\"th\" scope=\"row\">{row.grade_studentName}</TableCell>\r\n                                        <TableCell className={classes.content}>{row.grade_studentId}</TableCell>\r\n                                        <TableCell className={classes.content}>{row.grade_studentGrade}</TableCell>\r\n                                        <TableCell className={classes.content}>{row.grade_studentRank}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n\r\n                </div>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Grade);\r\n"]},"metadata":{},"sourceType":"module"}