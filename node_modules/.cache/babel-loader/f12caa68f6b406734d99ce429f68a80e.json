{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u800D\\u5EE2\\u793E\\\\Desktop\\\\MyProject\\\\src\\\\components\\\\Course\\\\CourseDialog.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { withStyles } from '@material-ui/core/styles';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select'; // import { fetchPostCourse } from '../../api';\n\nimport Airtable from 'airtable';\nvar base = new Airtable({\n  apiKey: 'keyA7EKdngjou4Dgy'\n}).base('appcXtOTPnE4QWIIt');\nvar tableTeacher = base('Teacher');\nvar tableClassRoom = base('ClassRoom');\nvar tableClassDay = base('ClassDay');\nvar counter = 0;\n\nfunction createData(classroom, area) {\n  counter += 1;\n  return {\n    id: classroom,\n    area: area\n  };\n} //let counter = 0;\n\n\nfunction createDayData(classroom, day, time) {\n  counter += 1;\n  return {\n    id: classroom,\n    day: day,\n    time: time\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '800px',\n      margin: 'auto'\n    },\n    formControl: {\n      minWidth: 120,\n      width: 220,\n      marginTop: theme.spacing.unit * 3\n    },\n    container: {\n      width: '400px',\n      paddingLeft: '22%'\n    },\n    textField: {\n      width: 220,\n      marginTop: theme.spacing.unit * 3\n    },\n    add: {\n      marginTop: theme.spacing.unit * 3,\n      marginLeft: theme.spacing.unit * 150,\n      borderRadius: '10px'\n    }\n  };\n};\n\nvar FormDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormDialog, _React$Component);\n\n  function FormDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      course: '',\n      teacher: '',\n      teacherValue: [],\n      classroom: '',\n      classroomInit: [],\n      classroomValue: [],\n      day: '',\n      dayValue: [\"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\", \"星期日\"],\n      dayInit: [],\n      time: '',\n      timeValue: [\"9:00\", \"13:00\", \"19:00\"],\n      labelWidth: 0,\n      open: false,\n      listNameFromParent: ''\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value)); //after change classroom\n\n\n        var dayValueTemp = [\"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\", \"星期日\"];\n\n        for (var index = 0; index < _this.state.dayInit.length; index++) {\n          if (event.target.value == _this.state.dayInit[index].id) {\n            for (var j = 0; j < 5; j++) {\n              if (_this.state.dayValue[j] == _this.state.dayInit[index].day) {\n                delete dayValueTemp[j];\n              }\n            }\n          }\n        }\n\n        _this.setState({\n          dayValue: dayValueTemp\n        }); //time value(after choose day)\n        // var timeValueTemp = [\"9:00\",\"13:00\",\"19:00\"];\n        // for(var j = 0; j < 5; j++){\n        //     if(event.target.value == this.state.dayValue[j]){\n        //         timeValueTemp = [\"19:00\"];\n        //     }\n        // }\n        // this.setState({timeValue : timeValueTemp});\n        // console.log(event.target.value);\n        // if(event.target.value == \"星期六\" || event.target.value == \"星期日\"){\n        //     this.setState({timeValue : [\"9:00\",\"13:00\",\"19:00\"]});\n        //     //this.setState({timeValue : [\"19:00\"]});\n        // }else{\n        //     this.setState({timeValue : [\"19:00\"]});\n        // }\n\n      };\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FormDialog, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.listNameFromParent !== this.state.listNameFromParent) {\n        var count = this.state.classroomInit.length;\n        var temp = [];\n\n        for (var index = 0; index < count; index++) {\n          if (nextProps.listNameFromParent === this.state.classroomInit[index].area) {\n            temp.push(this.state.classroomInit[index]);\n            this.setState({\n              classroomValue: temp\n            });\n          }\n        }\n\n        this.setState({\n          listNameFromParent: nextProps.listNameFromParent\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //Teacher\n      tableTeacher.select({\n        view: \"Grid view\"\n      }).eachPage(function (records, fetchNextPage) {\n        _this2.setState({\n          records: records\n        });\n\n        var temp = [];\n\n        var teacher_name = _this2.state.records.map(function (record, index) {\n          return record.fields['teacher_name'];\n        });\n\n        for (var index = 0; index < teacher_name.length; index++) {\n          temp.push(teacher_name[index]);\n        }\n\n        _this2.setState({\n          teacherValue: temp\n        });\n\n        fetchNextPage();\n      }); //ClassRoom\n\n      tableClassRoom.select({\n        view: \"Grid view\"\n      }).eachPage(function (records, fetchNextPage) {\n        _this2.setState({\n          records: records\n        });\n\n        var temp = [];\n\n        var classroom_id = _this2.state.records.map(function (record, index) {\n          return record.fields['classroom_id'];\n        });\n\n        var class_area = _this2.state.records.map(function (record, index) {\n          return record.fields['class_area'];\n        });\n\n        for (var index = 0; index < classroom_id.length; index++) {\n          temp.push(createData(classroom_id[index], class_area[index]));\n        }\n\n        _this2.setState({\n          classroomInit: temp\n        });\n\n        _this2.setState({\n          classroomValue: temp\n        });\n\n        fetchNextPage();\n      }); //classDay\n\n      tableClassDay.select({\n        view: \"Grid view\"\n      }).eachPage(function (records, fetchNextPage) {\n        _this2.setState({\n          records: records\n        });\n\n        var temp = [];\n        var tempArea = [];\n\n        var classroom_id = _this2.state.records.map(function (record, index) {\n          return record.fields['classroom_id'];\n        });\n\n        var class_day = _this2.state.records.map(function (record, index) {\n          return record.fields['class_day'];\n        });\n\n        var class_start_time = _this2.state.records.map(function (record, index) {\n          return record.fields['class_start_time'];\n        });\n\n        for (var index = 0; index < classroom_id.length; index++) {\n          temp.push(createDayData(classroom_id[index], class_day[index], class_start_time[index]));\n        }\n\n        _this2.setState({\n          dayInit: temp\n        });\n\n        fetchNextPage();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.add,\n        variant: \"outlined\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u8AB2\\u7A0B\"), React.createElement(Dialog, {\n        className: classes.root,\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u8AB2\\u7A0B\\u8CC7\\u6599\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-course\",\n        label: \"\\u8AB2\\u7A0B\\u540D\\u7A31\",\n        className: classes.textField,\n        value: this.state.course,\n        onChange: this.handleChange('course'),\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref) {\n          _this3.InputLabelRef = _ref;\n        },\n        htmlFor: \"outlined-teacher-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"\\u6388\\u8AB2\\u8001\\u5E2B\"), React.createElement(Select, {\n        value: this.state.teacher,\n        onChange: this.handleChange('teacher'),\n        input: React.createElement(OutlinedInput, {\n          labelWidth: this.state.labelWidth,\n          name: \"teacher\",\n          id: \"outlined-teacher-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"\\u9078\\u64C7\\u8001\\u5E2B\")), this.state.teacherValue.map(function (n, index) {\n        return React.createElement(MenuItem, {\n          value: n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, n);\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref2) {\n          _this3.InputLabelRef = _ref2;\n        },\n        htmlFor: \"outlined-classroom-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"\\u6559\\u5BA4\"), React.createElement(Select, {\n        value: this.state.classroom,\n        onChange: this.handleChange('classroom'),\n        input: React.createElement(OutlinedInput, {\n          labelWidth: this.state.labelWidth,\n          name: \"classroom\",\n          id: \"outlined-classroom-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"\\u9078\\u64C7\\u6559\\u5BA4\")), this.state.classroomValue.map(function (n, index) {\n        return React.createElement(MenuItem, {\n          value: n.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, n.id);\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref3) {\n          _this3.InputLabelRef = _ref3;\n        },\n        htmlFor: \"outlined-day-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"\\u661F\\u671F\"), React.createElement(Select, {\n        value: this.state.day,\n        onChange: this.handleChange('day'),\n        input: React.createElement(OutlinedInput, {\n          labelWidth: this.state.labelWidth,\n          name: \"day\",\n          id: \"outlined-day-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), this.state.dayValue.map(function (n, index) {\n        return React.createElement(MenuItem, {\n          value: n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, n);\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref4) {\n          _this3.InputLabelRef = _ref4;\n        },\n        htmlFor: \"outlined-day-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"\\u6642\\u9593\"), React.createElement(Select, {\n        value: this.state.time,\n        onChange: this.handleChange('time'),\n        input: React.createElement(OutlinedInput, {\n          labelWidth: this.state.labelWidth,\n          name: \"time\",\n          id: \"outlined-day-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), this.state.timeValue.map(function (n, index) {\n        return React.createElement(MenuItem, {\n          value: n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, n);\n      })))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"\\u53D6\\u6D88\"), React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u8AB2\\u7A0B\"))));\n    }\n  }]);\n\n  return FormDialog;\n}(React.Component);\n\nexport default withStyles(styles)(FormDialog);","map":{"version":3,"sources":["C:\\Users\\耍廢社\\Desktop\\MyProject\\src\\components\\Course\\CourseDialog.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","withStyles","OutlinedInput","InputLabel","MenuItem","FormControl","Select","Airtable","base","apiKey","tableTeacher","tableClassRoom","tableClassDay","counter","createData","classroom","area","id","createDayData","day","time","styles","theme","root","width","margin","formControl","minWidth","marginTop","spacing","unit","container","paddingLeft","textField","add","marginLeft","borderRadius","FormDialog","state","course","teacher","teacherValue","classroomInit","classroomValue","dayValue","dayInit","timeValue","labelWidth","open","listNameFromParent","handleChange","name","event","setState","target","value","dayValueTemp","index","length","j","handleClickOpen","handleClose","nextProps","count","temp","push","select","view","eachPage","records","fetchNextPage","teacher_name","map","record","fields","classroom_id","class_area","tempArea","class_day","class_start_time","classes","props","ref","InputLabelRef","n","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n// import { fetchPostCourse } from '../../api';\r\nimport Airtable from 'airtable';\r\n\r\nconst base = new Airtable({ apiKey: 'keyA7EKdngjou4Dgy' }).base('appcXtOTPnE4QWIIt');\r\nconst tableTeacher = base('Teacher');\r\nconst tableClassRoom = base('ClassRoom');\r\nconst tableClassDay = base('ClassDay');\r\n\r\nlet counter = 0;\r\nfunction createData(classroom, area) {\r\n    counter += 1;\r\n    return { id: classroom, area };\r\n}\r\n\r\n//let counter = 0;\r\nfunction createDayData(classroom, day, time) {\r\n    counter += 1;\r\n    return { id: classroom, day, time };\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        margin: 'auto',\r\n    },\r\n    formControl: {\r\n        minWidth: 120,\r\n        width: 220,\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    container: {\r\n        width: '400px',\r\n        paddingLeft:'22%',\r\n    },\r\n    textField: {\r\n        width: 220,\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    add:{\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit * 150,\r\n        borderRadius:'10px',\r\n    },\r\n});\r\n\r\nclass FormDialog extends React.Component {\r\n    state = {\r\n        course: '',\r\n        teacher: '',\r\n        teacherValue:[],\r\n        classroom: '',\r\n        classroomInit:[],\r\n        classroomValue:[],\r\n        day: '',\r\n        dayValue:[\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\",\"星期日\"],\r\n        dayInit:[],\r\n        time: '',\r\n        timeValue:[\"9:00\",\"13:00\",\"19:00\"],\r\n        labelWidth: 0,\r\n        open: false,\r\n        listNameFromParent: ''\r\n    };\r\n\r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.listNameFromParent !== this.state.listNameFromParent) {\r\n            var count = this.state.classroomInit.length;\r\n            var temp = [];\r\n            for (var index = 0; index < count; index++) {\r\n                if (nextProps.listNameFromParent === this.state.classroomInit[index].area) {\r\n                    temp.push(this.state.classroomInit[index]);\r\n                    this.setState({ classroomValue: temp });\r\n                }\r\n            }\r\n            this.setState({ listNameFromParent: nextProps.listNameFromParent });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {    \r\n        //Teacher\r\n        tableTeacher.select({\r\n          view: \"Grid view\",\r\n          }).eachPage((records, fetchNextPage) => {\r\n            this.setState({records});\r\n            var temp=[];\r\n            const teacher_name = this.state.records.map((record, index) => record.fields['teacher_name']); \r\n            for(var index = 0; index < teacher_name.length; index++){\r\n                temp.push(teacher_name[index]);\r\n            }   \r\n            \r\n            this.setState({teacherValue : temp});\r\n            fetchNextPage(); \r\n          }\r\n          );\r\n\r\n        //ClassRoom\r\n        tableClassRoom.select({\r\n            view: \"Grid view\",\r\n            }).eachPage((records, fetchNextPage) => {\r\n                this.setState({records});\r\n                var temp=[];\r\n                const classroom_id = this.state.records.map((record, index) => record.fields['classroom_id']); \r\n                const class_area = this.state.records.map((record, index) => record.fields['class_area']); \r\n                for(var index = 0; index < classroom_id.length; index++){\r\n                    temp.push(createData(classroom_id[index], class_area[index]));\r\n                }\r\n                this.setState({classroomInit : temp});\r\n                this.setState({classroomValue : temp});\r\n                fetchNextPage(); \r\n            }\r\n            );\r\n        //classDay\r\n        tableClassDay.select({\r\n            view: \"Grid view\",\r\n            }).eachPage((records, fetchNextPage) => {\r\n                this.setState({records});\r\n                var temp = [];\r\n                var tempArea = [];\r\n                const classroom_id = this.state.records.map((record, index) => record.fields['classroom_id']); \r\n                const class_day = this.state.records.map((record, index) => record.fields['class_day']); \r\n                const class_start_time = this.state.records.map((record, index) => record.fields['class_start_time']); \r\n                for(var index = 0; index < classroom_id.length; index++){\r\n                    temp.push(createDayData(classroom_id[index], class_day[index], class_start_time[index]));\r\n                }\r\n                this.setState({dayInit : temp});\r\n                fetchNextPage(); \r\n            }\r\n            );\r\n      }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n\r\n        //after change classroom\r\n        var dayValueTemp = [\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\",\"星期日\"];\r\n        for(var index = 0; index < this.state.dayInit.length; index++){\r\n            if(event.target.value == this.state.dayInit[index].id){\r\n                for(var j = 0; j < 5; j++){\r\n                    if(this.state.dayValue[j] == this.state.dayInit[index].day){\r\n                        delete dayValueTemp[j];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setState({dayValue : dayValueTemp});\r\n\r\n        //time value(after choose day)\r\n        // var timeValueTemp = [\"9:00\",\"13:00\",\"19:00\"];\r\n        // for(var j = 0; j < 5; j++){\r\n        //     if(event.target.value == this.state.dayValue[j]){\r\n        //         timeValueTemp = [\"19:00\"];\r\n        //     }\r\n        // }\r\n        // this.setState({timeValue : timeValueTemp});\r\n\r\n        // console.log(event.target.value);\r\n        // if(event.target.value == \"星期六\" || event.target.value == \"星期日\"){\r\n        //     this.setState({timeValue : [\"9:00\",\"13:00\",\"19:00\"]});\r\n        //     //this.setState({timeValue : [\"19:00\"]});\r\n        // }else{\r\n        //     this.setState({timeValue : [\"19:00\"]});\r\n        // }\r\n\r\n\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Button className={classes.add} variant=\"outlined\" onClick={this.handleClickOpen}>\r\n                    新增課程\r\n                </Button>\r\n                <Dialog className={classes.root}\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">新增課程資料</DialogTitle>\r\n                    <DialogContent>\r\n                        <form className={classes.container} noValidate autoComplete=\"off\">\r\n                            <div>\r\n                                <TextField\r\n                                    id=\"outlined-course\"\r\n                                    label=\"課程名稱\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.course}\r\n                                    onChange={this.handleChange('course')}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel\r\n                                        ref={ref => {\r\n                                            this.InputLabelRef = ref;\r\n                                        }}\r\n                                        htmlFor=\"outlined-teacher-simple\"\r\n                                    >\r\n                                        授課老師\r\n                                </InputLabel>\r\n                                    <Select\r\n                                        value={this.state.teacher}\r\n                                        onChange={this.handleChange('teacher')}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                                labelWidth={this.state.labelWidth}\r\n                                                name=\"teacher\"\r\n                                                id=\"outlined-teacher-simple\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                            <em>選擇老師</em>\r\n                                        </MenuItem>\r\n                                        {(this.state.teacherValue).map((n, index) => {\r\n                                            return (\r\n                                                <MenuItem value={n}>{n}</MenuItem>\r\n                                            );\r\n                                        })}\r\n                                        {/* <MenuItem value={10}>蔡萌志</MenuItem>\r\n                                        <MenuItem value={20}>胡俊之</MenuItem>\r\n                                        <MenuItem value={30}>陳子立</MenuItem> */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel\r\n                                        ref={ref => {\r\n                                            this.InputLabelRef = ref;\r\n                                        }}\r\n                                        htmlFor=\"outlined-classroom-simple\"\r\n                                    >\r\n                                        教室\r\n                                </InputLabel>\r\n                                    <Select\r\n                                        value={this.state.classroom}\r\n                                        onChange={this.handleChange('classroom')}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                                labelWidth={this.state.labelWidth}\r\n                                                name=\"classroom\"\r\n                                                id=\"outlined-classroom-simple\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                            <em>選擇教室</em>\r\n                                        </MenuItem>\r\n                                        {(this.state.classroomValue).map((n, index) => {\r\n                                            return (\r\n                                                <MenuItem value={n.id}>{n.id}</MenuItem>\r\n                                            );\r\n                                        })}\r\n                                        {/* <MenuItem value={10}>BS336</MenuItem>\r\n                                        <MenuItem value={20}>BS440</MenuItem>\r\n                                        <MenuItem value={30}>LM503</MenuItem> */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel\r\n                                        ref={ref => {\r\n                                            this.InputLabelRef = ref;\r\n                                        }}\r\n                                        htmlFor=\"outlined-day-simple\"\r\n                                    >\r\n                                        星期\r\n                                </InputLabel>\r\n                                    <Select\r\n                                        value={this.state.day}\r\n                                        onChange={this.handleChange('day')}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                                labelWidth={this.state.labelWidth}\r\n                                                name=\"day\"\r\n                                                id=\"outlined-day-simple\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                        </MenuItem>\r\n                                        {(this.state.dayValue).map((n, index) => {\r\n                                            return (\r\n                                                <MenuItem value={n}>{n}</MenuItem>\r\n                                            );\r\n                                        })}\r\n                                        {/* <MenuItem value={10}>星期一</MenuItem>\r\n                                        <MenuItem value={20}>星期二</MenuItem>\r\n                                        <MenuItem value={30}>星期三</MenuItem> */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel\r\n                                        ref={ref => {\r\n                                            this.InputLabelRef = ref;\r\n                                        }}\r\n                                        htmlFor=\"outlined-day-simple\"\r\n                                    >\r\n                                        時間\r\n                                </InputLabel>\r\n                                    <Select\r\n                                        value={this.state.time}\r\n                                        onChange={this.handleChange('time')}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                                labelWidth={this.state.labelWidth}\r\n                                                name=\"time\"\r\n                                                id=\"outlined-day-simple\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                        </MenuItem>\r\n                                        {(this.state.timeValue).map((n, index) => {\r\n                                            return (\r\n                                                <MenuItem value={n}>{n}</MenuItem>\r\n                                            );\r\n                                        })}\r\n                                        {/* <MenuItem value={10}>21:00</MenuItem>\r\n                                        <MenuItem value={20}>22:00</MenuItem>\r\n                                        <MenuItem value={30}>19:00</MenuItem> */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">取消</Button>\r\n                        <Button onClick={this.handleClose} color=\"primary\">新增課程</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(FormDialog);"]},"metadata":{},"sourceType":"module"}