import _extends from "@babel/runtime/helpers/esm/extends";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { useState } from 'react';
import PropTypes from 'prop-types';
import MUIDataTable from 'mui-datatables';
import Loader from '../Loader';

var DataTable = function DataTable(_ref) {
  var loading = _ref.loading,
      options = _ref.options,
      other = _objectWithoutProperties(_ref, ["loading", "options"]);

  var _ref2 = options || {},
      onTableChange = _ref2.onTableChange,
      otherOptions = _objectWithoutProperties(_ref2, ["onTableChange"]); // TODO: Fixed bug https://github.com/gregnb/mui-datatables/issues/267.


  var _useState = useState(10),
      _useState2 = _slicedToArray(_useState, 2),
      rowsPerPage = _useState2[0],
      setRowsPerPage = _useState2[1];

  var handleTableChange = function handleTableChange(action, tableState) {
    if (action === 'changeRowsPerPage') {
      setRowsPerPage(tableState.rowsPerPage);
    }

    if (onTableChange) {
      onTableChange(action, tableState);
    }
  };

  if (loading) return React.createElement(Loader, null);
  return React.createElement(MUIDataTable, _extends({
    options: _objectSpread({
      onTableChange: handleTableChange,
      rowsPerPage: rowsPerPage
    }, otherOptions)
  }, other));
};

DataTable.propTypes = {
  // customized props
  loading: PropTypes.bool
};
export default DataTable;