import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import FormControl from '@material-ui/core/FormControl';
import FormLabel from '@material-ui/core/FormLabel';
import MUIRadioGroup from '@material-ui/core/RadioGroup';
import FormHelperText from '@material-ui/core/FormHelperText';
import Radio from '../Radio';

var RadioGroup =
/*#__PURE__*/
function (_Component) {
  _inherits(RadioGroup, _Component);

  function RadioGroup() {
    _classCallCheck(this, RadioGroup);

    return _possibleConstructorReturn(this, _getPrototypeOf(RadioGroup).apply(this, arguments));
  }

  _createClass(RadioGroup, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          label = _this$props.label,
          options = _this$props.options,
          showHelperText = _this$props.showHelperText,
          helperText = _this$props.helperText,
          FormControlProps = _this$props.FormControlProps,
          FormLabelProps = _this$props.FormLabelProps,
          RadioGroupProps = _this$props.RadioGroupProps,
          FormHelperTextProps = _this$props.FormHelperTextProps,
          children = _this$props.children;
      return React.createElement(FormControl, FormControlProps, React.createElement(FormLabel, FormLabelProps, label), React.createElement(MUIRadioGroup, RadioGroupProps, children || options.map(function (option, index) {
        return React.createElement(Radio, _extends({
          key: index
        }, option));
      })), showHelperText && React.createElement(FormHelperText, FormHelperTextProps, helperText));
    }
  }]);

  return RadioGroup;
}(Component);

RadioGroup.propTypes = {
  label: PropTypes.string.isRequired,
  options: PropTypes.array,
  showHelperText: PropTypes.bool,
  helperText: PropTypes.string,
  FormControlProps: PropTypes.object,
  FormLabelProps: PropTypes.object,
  RadioGroupProps: PropTypes.object,
  FormHelperTextProps: PropTypes.object,
  children: PropTypes.node
};
export { RadioGroup as default };