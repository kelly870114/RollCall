import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import warning from 'warning';
import FormControl from '@material-ui/core/FormControl';
import FormLabel from '@material-ui/core/FormLabel';
import FormGroup from '@material-ui/core/FormGroup';
import FormHelperText from '@material-ui/core/FormHelperText';
import CheckboxInput from '../CheckboxInput';

var CheckboxInputGroup =
/*#__PURE__*/
function (_Component) {
  _inherits(CheckboxInputGroup, _Component);

  function CheckboxInputGroup() {
    _classCallCheck(this, CheckboxInputGroup);

    return _possibleConstructorReturn(this, _getPrototypeOf(CheckboxInputGroup).apply(this, arguments));
  }

  _createClass(CheckboxInputGroup, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          label = _this$props.label,
          options = _this$props.options,
          showHelperText = _this$props.showHelperText,
          helperText = _this$props.helperText,
          MUIFormLabelProps = _this$props.MUIFormLabelProps,
          FormGroupProps = _this$props.FormGroupProps,
          FormHelperTextProps = _this$props.FormHelperTextProps,
          children = _this$props.children,
          other = _objectWithoutProperties(_this$props, ["label", "options", "showHelperText", "helperText", "MUIFormLabelProps", "FormGroupProps", "FormHelperTextProps", "children"]);

      warning(children === undefined, 'CheckboxInputGroup should not has children please use `options` only!');
      return React.createElement(FormControl, other, React.createElement(FormLabel, MUIFormLabelProps, label), React.createElement(FormGroup, FormGroupProps, options.map(function (option, index) {
        return React.createElement(CheckboxInput, _extends({
          key: index
        }, option));
      })), showHelperText && React.createElement(FormHelperText, FormHelperTextProps, helperText));
    }
  }]);

  return CheckboxInputGroup;
}(Component);

CheckboxInputGroup.propTypes = {
  /**
   * The content of the FormLabel.
   */
  label: PropTypes.string,

  /**
   * A shortcut for generate group items.
   */
  options: PropTypes.arrayOf(PropTypes.shape({
    name: PropTypes.string.isRequired
  })).isRequired,

  /**
   * The content of the FormHelperText.
   */
  helperText: PropTypes.string,

  /**
   * To show helperText or not.
   */
  showHelperText: PropTypes.bool,

  /**
   * MUI FormLabel Props
   */
  MUIFormLabelProps: PropTypes.object,

  /**
   * MUI FormGroup Props
   */
  MUIFormGroupProps: PropTypes.object,

  /**
   * MUI FormHelperText Props
   */
  MUIFormHelperTextProps: PropTypes.object
};
export { CheckboxInputGroup as default };