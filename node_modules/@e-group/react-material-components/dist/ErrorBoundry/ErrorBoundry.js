import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import React, { Component } from 'react';
import PropTypes from 'prop-types';

var ErrorBoundry =
/*#__PURE__*/
function (_Component) {
  _inherits(ErrorBoundry, _Component);

  function ErrorBoundry() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, ErrorBoundry);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ErrorBoundry)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {
      error: null,
      errorInfo: null
    };
    return _this;
  }

  _createClass(ErrorBoundry, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, errorInfo) {
      this.setState({
        error: error,
        errorInfo: errorInfo
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$state = this.state,
          error = _this$state.error,
          errorInfo = _this$state.errorInfo;
      var children = this.props.children;

      if (error) {
        return React.createElement("div", null, React.createElement("h2", null, 'Oh-no! Something went wrong'), React.createElement("p", {
          className: "red"
        }, error && error.toString()), React.createElement("div", null, 'Component Stack Error Details: '), React.createElement("p", {
          className: "red"
        }, errorInfo.componentStack));
      }

      return children;
    }
  }]);

  return ErrorBoundry;
}(Component);

ErrorBoundry.propTypes = {
  children: PropTypes.node.isRequired
};
export { ErrorBoundry as default };